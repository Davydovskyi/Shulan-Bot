server:
  port: ${NODE_PORT:8085}

app:
  link-for-files: ${HOST_URL:localhost}:${REST_SERVICE_PORT:8086}
  doc-secret: ${DOC_SECRET:YwgQfxWvap1sEMY63pNU}
  photo-secret: ${PHOTO_SECRET:C220VomyPV0yTNTqiK8j}
  user-secret: ${USER_SECRET:hhuYny0KKbu5kBGWd2cK}

bot:
  token: ${TG_BOT_TOKEN:------------------------------}
  service:
    file-info:
      uri: ${TG_BOT_FILE_INFO_URI:https://api.telegram.org/bot{token}/getFile?file_id={fileId}}
    file-storage:
      uri: ${TG_BOT_FILE_STORAGE_URI:https://api.telegram.org/file/bot{token}/{filePath}}

logging:
  level:
    root: info
  file:
    name: ./logs/node.log
  logback:
    rolling policy:
      max-history: 3
      max-file-size: 1MB

spring:
  datasource:
    username: ${POSTGRES_USERNAME:postgres}
    password: ${POSTGRES_PASSWORD:postgres}
    url: ${POSTGRES_URL:jdbc:postgresql://localhost:5433/shulan}
    driver-class-name: org.postgresql.Driver
  jpa:
    open-in-view: false
    properties:
      hibernate:
        format_sql: true
        show_sql: true
        hbm2ddl:
          auto: validate
        jdbc:
          fetch_size: 100
          batch_size: 100
  flyway:
    url: ${POSTGRES_URL:jdbc:postgresql://localhost:5433/shulan}
    locations: classpath:db/migration
    user: ${POSTGRES_USERNAME:postgres}
    password: ${POSTGRES_PASSWORD:postgres}

  rabbitmq:
    host: ${RABBIT_HOST:localhost}
    port: ${RABBIT_PORT:5673}
    username: ${RABBIT_USERNAME:redfan}
    password: ${RABBIT_PASSWORD:redfan}
    queues:
      text-message-update: ${RABBIT_TEXT_MESSAGE_UPDATE_QUEUE:text_message_update_queue}
      doc-message-update: ${RABBIT_DOC_MESSAGE_UPDATE_QUEUE:doc_message_update_queue}
      photo-message-update: ${RABBIT_PHOTO_MESSAGE_UPDATE_QUEUE:photo_message_update_queue}
      answer-message: ${RABBIT_ANSWER_MESSAGE_QUEUE:answer_message_queue}
      registration-mail: ${RABBIT_REGISTRATION_MAIL_QUEUE:registration_mail_queue}